{"ast":null,"code":"var _jsxFileName = \"/Users/rodolphonapoleon/Downloads/govoo/pages/restaurants/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Dishes from \"../../components/dishes\";\nimport { useRouter } from 'next/router';\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nexport default function Restaurant() {\n  _s();\n\n  var _this = this;\n\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  console.log(\"URL: \".concat(API_URL)); // const [query, setQuery] = useState(\"\");\n\n  var link = new HttpLink({\n    uri: \"\".concat(API_URL, \"/graphql\")\n  });\n  var cache = new InMemoryCache();\n  var client = new ApolloClient({\n    link: link,\n    cache: cache\n  });\n  var router = useRouter();\n  var restaurantID = router.query.id;\n\n  var renderDishes = function renderDishes(restaurantID) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \" \");\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Restaurant \", restaurantID), renderDishes(restaurantID)));\n}\n\n_s(Restaurant, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["/Users/rodolphonapoleon/Downloads/govoo/pages/restaurants/[id].js"],"names":["Dishes","useRouter","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","Restaurant","API_URL","process","env","NEXT_PUBLIC_API_URL","console","log","link","uri","cache","client","router","restaurantID","query","id","renderDishes"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAQC,cAAR,EAAuBC,YAAvB,EAAoCC,QAApC,EAA8CC,aAA9C,QAAkE,gBAAlE;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAAA;;AAEnC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACEC,EAAAA,OAAO,CAACC,GAAR,gBAAoBL,OAApB,GAHiC,CAIjC;;AACA,MAAMM,IAAI,GAAG,IAAIT,QAAJ,CAAa;AAAEU,IAAAA,GAAG,YAAKP,OAAL;AAAL,GAAb,CAAb;AACA,MAAMQ,KAAK,GAAG,IAAIV,aAAJ,EAAd;AACA,MAAMW,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAACU,IAAAA,IAAI,EAAJA,IAAD;AAAME,IAAAA,KAAK,EAALA;AAAN,GAAjB,CAAf;AAEA,MAAME,MAAM,GAAGhB,SAAS,EAAxB;AACA,MAAMiB,YAAY,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAAlC;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,YAAD,EAAkB;AACnC,WAAQ,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AACD,GAFH;;AAIA,SAAQ,4BACR,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBE,YAAhB,CADA,EAECG,YAAY,CAACH,YAAD,CAFb,CADQ,CAAR;AAMH;;GArBuBZ,U;UASLL,S;;;KATKK,U","sourcesContent":["import Dishes from \"../../components/dishes\";\nimport { useRouter } from 'next/router'\nimport {ApolloProvider,ApolloClient,HttpLink, InMemoryCache} from '@apollo/client';\n\nexport default function Restaurant() {\n\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    console.log(`URL: ${API_URL}`)\n    // const [query, setQuery] = useState(\"\");\n    const link = new HttpLink({ uri: `${API_URL}/graphql`})\n    const cache = new InMemoryCache()\n    const client = new ApolloClient({link,cache});\n\n    const router = useRouter();\n    const restaurantID = router.query.id;\n    const renderDishes = (restaurantID) => {\n        return (<Dishes restId={restaurantID}> </Dishes>)\n      };\n\n    return (<> \n    <ApolloProvider client={client}>\n    <h1>Restaurant {restaurantID}</h1>\n    {renderDishes(restaurantID)}\n    </ApolloProvider>\n    </>)\n}"]},"metadata":{},"sourceType":"module"}