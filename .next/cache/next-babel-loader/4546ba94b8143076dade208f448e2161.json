{"ast":null,"code":"var _jsxFileName = \"/Users/rodolphonapoleon/Downloads/govoo/pages/restaurants/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Dishes from \"../../components/dishes\";\nimport { useRouter } from 'next/router';\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\nimport Cart from \"../../components/cart\";\nimport { useState } from \"react\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nexport default function Restaurant() {\n  _s();\n\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  console.log(\"URL: \".concat(API_URL)); // const [query, setQuery] = useState(\"\");\n\n  var link = new HttpLink({\n    uri: \"\".concat(API_URL, \"/graphql\")\n  });\n  var cache = new InMemoryCache();\n  var client = new ApolloClient({\n    link: link,\n    cache: cache\n  });\n  var router = useRouter();\n  var restaurantID = router.query.id; // const renderDishes = (restaurantID) => {\n  //     return (<Dishes restId={restaurantID}> </Dishes>)\n  //   };\n\n  var _useState = useState(\"\"),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  return __jsx(React.Fragment, null, __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Restaurant \", restaurantID), __jsx(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: function onChange(e) {\n      return setQuery(e.target.value.toLocaleLowerCase());\n    },\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }\n  })), __jsx(Dishes, {\n    restId: restaurantID,\n    search: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \" \"), __jsx(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \" \")));\n}\n\n_s(Restaurant, \"CxqtbXIY8M13WdA8+o02mhKj3P8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["/Users/rodolphonapoleon/Downloads/govoo/pages/restaurants/[id].js"],"names":["Dishes","useRouter","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","Cart","useState","InputGroup","InputGroupAddon","Input","Restaurant","API_URL","process","env","NEXT_PUBLIC_API_URL","console","log","link","uri","cache","client","router","restaurantID","query","id","setQuery","e","target","value","toLocaleLowerCase"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAQC,cAAR,EAAuBC,YAAvB,EAAoCC,QAApC,EAA8CC,aAA9C,QAAkE,gBAAlE;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAqCC,KAArC,QAAiD,YAAjD;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEnC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACEC,EAAAA,OAAO,CAACC,GAAR,gBAAoBL,OAApB,GAHiC,CAIjC;;AACA,MAAMM,IAAI,GAAG,IAAId,QAAJ,CAAa;AAAEe,IAAAA,GAAG,YAAKP,OAAL;AAAL,GAAb,CAAb;AACA,MAAMQ,KAAK,GAAG,IAAIf,aAAJ,EAAd;AACA,MAAMgB,MAAM,GAAG,IAAIlB,YAAJ,CAAiB;AAACe,IAAAA,IAAI,EAAJA,IAAD;AAAME,IAAAA,KAAK,EAALA;AAAN,GAAjB,CAAf;AAEA,MAAME,MAAM,GAAGrB,SAAS,EAAxB;AACA,MAAMsB,YAAY,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAAlC,CAViC,CAWjC;AACA;AACA;;AAbiC,kBAcLlB,QAAQ,CAAC,EAAD,CAdH;AAAA,MAcxBiB,KAdwB;AAAA,MAcjBE,QAdiB;;AAgBjC,SAAQ,4BACR,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBE,YAAhB,CADA,EAEA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACY,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA,MAAC,KAAD;AACI,IAAA,QAAQ,EAAE,kBAACI,CAAD;AAAA,aACVD,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,iBAAf,EAAD,CADE;AAAA,KADd;AAII,IAAA,KAAK,EAAEN,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADZ,EASyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATzB,CAFA,EAaQ,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAED,YAAhB;AAA8B,IAAA,MAAM,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbR,EAcA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdA,CADQ,CAAR;AAkBH;;GAlCuBb,U;UASLV,S;;;KATKU,U","sourcesContent":["import Dishes from \"../../components/dishes\";\nimport { useRouter } from 'next/router'\nimport {ApolloProvider,ApolloClient,HttpLink, InMemoryCache} from '@apollo/client';\nimport Cart from \"../../components/cart\";\nimport { useState } from \"react\";\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\n\nexport default function Restaurant() {\n\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n    console.log(`URL: ${API_URL}`)\n    // const [query, setQuery] = useState(\"\");\n    const link = new HttpLink({ uri: `${API_URL}/graphql`})\n    const cache = new InMemoryCache()\n    const client = new ApolloClient({link,cache});\n\n    const router = useRouter();\n    const restaurantID = router.query.id;\n    // const renderDishes = (restaurantID) => {\n    //     return (<Dishes restId={restaurantID}> </Dishes>)\n    //   };\n      const [query, setQuery] = useState(\"\");\n\n    return (<> \n    <ApolloProvider client={client}>\n    <h1>Restaurant {restaurantID}</h1>\n    <div className=\"search\">\n                <InputGroup >\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\n                <Input\n                    onChange={(e) =>\n                    setQuery(e.target.value.toLocaleLowerCase())\n                    }\n                    value={query}\n                />\n                </InputGroup><br></br>\n            </div>\n            <Dishes restId={restaurantID} search={query}> </Dishes>\n    <Cart> </Cart>\n    </ApolloProvider>\n    </>)\n}"]},"metadata":{},"sourceType":"module"}